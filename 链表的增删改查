#include<stdio.h>
#include<malloc.h>
#include<stdbool.h>
typedef struct Node {
	struct Node* next;
	int val;
}Node;


//初始化
Node* init(int val) {
	Node* node = (Node*)malloc(sizeof(Node));
	node->next = NULL;
	node->val = val;
	return node;
}


//头插
Node* insertH(Node* head, int val) {
	if (head == NULL) {
		Node* newNode = init(val);
		return newNode;
	}
	Node* newNode = init(val);
	newNode->next = head;
	return newNode;
}

//尾插
Node* insertL(Node* head, int val) {
	if (head == NULL) {
		Node* newNode = init(val);
		return newNode;
	}
	Node* cur = head;
	while (cur->next) {
		cur = cur->next;
	}
	cur->next = init(val);
	return head;

}


//删
Node* deleteNode(Node* head, int val) {
	if (NULL == head) return head;
	Node* cur = head;
	Node* pre = NULL;
	while (cur) {
		if (cur->val == val) {
			Node* del = cur;
			if (pre == NULL) {
				head = cur->next;
				cur = cur->next;
			}else {
				pre->next = cur->next;
				cur = cur->next;
			}
		del->next = NULL;
		}else {
			pre = cur;
			cur = cur->next;
		}
	}
	return head;
}

//查
bool contain(Node* head, int val) {
	if (head == NULL) return NULL;
	Node* cur = head;
	while (cur) {
		if (cur->val == val) return true;
		cur = cur->next;
	}
	return false;
}

//改
Node* revise(Node* head, int val, int rval) {
	Node* cur = head;
	while (cur) {
		if (cur->val == val) {
			cur->val = rval;
		}
		cur = cur->next;
	}
	return head;
}
